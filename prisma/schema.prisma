generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ProductCategory {
  id               Int               @id @default(autoincrement())
  parentCategory   ProductCategory?  @relation("SubCategory", fields: [parentCategoryId], references: [id])
  parentCategoryId Int?
  childCategory    ProductCategory[] @relation("SubCategory")
  categoryName     String            @unique
  products         Product[]
  variations       Variation[]
}

model Product {
  id           String          @id @default(cuid())
  name         String
  description  String
  category     ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId   Int
  productImage String
  productItems ProductItem[]
}

model ProductItem {
  id                String          @id @default(cuid())
  product           Product         @relation(fields: [productId], references: [id])
  productId         String
  SKU               String          @unique @default(cuid())
  quantityInStock   Int
  price             Decimal         @db.Money
  itemImage         String?
  variationOption   VariationOption @relation(fields: [variationOptionId], references: [id])
  variationOptionId String
}

model VariationOption {
  id           String        @id @default(cuid())
  productItems ProductItem[]
  value        String        @unique
  variations   Variation[]
}

model Variation {
  id                String            @id @default(cuid())
  variationName     String            @unique
  variationOptions  VariationOption[]
  ProductCategories ProductCategory[]
}
